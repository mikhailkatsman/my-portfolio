@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap");

html {
    font-family: "Roboto Mono", monospace;
}

* {
    margin: 0;
    padding: 0;
}

body {
    font-size: 62.5%;
    background-color: #111;

    -ms-overflow-style: none; /* for Internet Explorer, Edge */
    scrollbar-width: none; 
    overflow-x: hidden;/* for Firefox */
    overflow-y: scroll;
}

body::-webkit-scrollbar {
    display: none; /* for Chrome, Safari, and Opera */
}

.faces {
    position: relative;
    display: flex;
    flex-direction: column;
    max-width: 60rem;
    height: 60rem;

    z-index: 111;

    margin: auto;
    margin-top: calc(50vmax - 50%);

    /* box-shadow: 0 0 0 0.5rem lightgreen; */
}

.faces-row {
    display: flex;
}

footer {
    position: fixed;
    inset: auto 0 0 0;

    height: 3.2rem;

    z-index: 999;
    text-align: center;
}

footer > p {
    font-size: 1.2rem;
    color: #444;
    margin: 0;
    margin-top: 0.8rem;
}

/* TEXT */
h1 {
    font-size: 16rem;
    font-weight: 700;
    line-height: 0;
    color: white;
}

h2 {
    font-size: 8rem;
    font-weight: 700;
    color: white;
    line-height: 1.1;
}

p {
    font-size: 4.8rem;
    font-weight: 700;
    color: white;
    line-height: 1.1;
}

/* PLAINS */
.x-plain {
    transform: rotateX(60deg) rotateZ(-45deg);
}

.y-plain {
    transform: rotateX(-16.8deg) rotateY(60deg);
}

.z-plain {
    transform: rotateX(16.8deg) rotateY(60deg);
}

.list-section {
    width: 60rem;
    margin: auto;
    opacity: 1;

    /* box-shadow: 0 0 0 0.5rem lightskyblue; */
}

.stick {
    position: fixed;
    inset: 0 0 auto 0;
}

.transition-out {
    animation-name: transition-out;
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(0.65, 0, 0.7, 0.38);
    animation-fill-mode: forwards;
}

.transition-in {
    animation-name: transition-in;
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(0.56, 0.94, 0.46, 1);
    animation-fill-mode: forwards;
}

.left {
    --x: -95%;
    --y: 50%;
    transform: translate(var(--x), var(--y));
}

.right {
    --x: 95%;
    --y: 50%;
    transform: translate(var(--x), var(--y));
}

@keyframes transition-out {
    0% {
        transform: translate(0%, 0%);
        opacity: 1;
    }
    100% {
        transform: translate(calc(var(--x) * -1), calc(var(--y) * -1));
        opacity: 0;
    }
}

@keyframes transition-in {
    0% {
        transform: translate(var(--x), var(--y));
        opacity: 0;
    }
    100% {
        transform: translate(0%, 0%);
        opacity: 1;
    }
}
