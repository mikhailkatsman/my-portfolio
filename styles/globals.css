@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');

html {
    font-family: 'Roboto Mono', monospace;
}

body {
    font-size: 62.5%;
    background-color: #111; 

    width: 100vw;
    height: 100vh;
    display: flex;

    justify-content: center;
    align-items: center;

    margin: 0;
    padding: 0; 
    
    -ms-overflow-style: none; /* for Internet Explorer, Edge */
    scrollbar-width: none; /* for Firefox */
    overflow-y: scroll; 

}

body::-webkit-scrollbar {
    display: none; /* for Chrome, Safari, and Opera */
}

.example::-webkit-scrollbar {
    display: none;
}

/* TEXT */
h1 {
    font-size: 16rem;
    font-weight: 700;
    line-height: 0;
    color: white;
}

h2 {
    font-size: 8rem;    
    font-weight: 700;
    color: white;
    line-height: 1.1;
}

p {
    font-size: 4.8rem;    
    font-weight: 700;
    color: white;
    line-height: 1.1;
}

/* PLAINS */
.x-plain {
  transform: rotateX(60deg) rotateZ(-45deg);

}

.y-plain {
  transform: rotateX(-16.8deg) rotateY(60deg);

}

.z-plain {
  transform: rotateX(16.8deg) rotateY(60deg);

}

/* SECTIONS STYLING */

.face-section {
    display: flex;
    flex-direction: column;
    max-width: 60rem;
    height: 60rem;

    opacity: 1;

    /* box-shadow: 0 0 0 0.5rem lightgreen; */
}

.face-section-row {
    display: flex;
}

.transition-out {
    animation-name: transition-out;
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(.65,0,.7,.38);
    animation-fill-mode: forwards;
}

.transition-in {
    animation-name: transition-in;
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(.56,.94,.46,1);
    animation-fill-mode: forwards;
}

.left {
    --x: -95%;
    --y: 50%;
    transform: translate(var(--x), var(--y));
}

.right {
    --x: 95%;
    --y: 50%;
    transform: translate(var(--x), var(--y));
}

@keyframes transition-out {
    0% {
        transform: translate(0%, 0%);
        opacity: 1;
    }
    100% {
        transform: translate(calc(var(--x) * -1), calc(var(--y) * -1));
        opacity: 0;
    }
}

@keyframes transition-in {
    0% {
        transform: translate(var(--x), var(--y));
        opacity: 0;
    }
    100% {
        transform: translate(0%, 0%);
        opacity: 1;
    }
}